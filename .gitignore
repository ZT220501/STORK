# Generic Ignores
**/__pycache__/

# PNDM Ignores
external/PNDM/models/*
external/PNDM/nips_data
external/PNDM/nips_vis
external/PNDM/vis_*

# Sana Ignores
# Sana related files
external/Sana/*_dev.py
external/Sana/*_dev.sh
external/Sana/.count.db
external/Sana/.gradio/
external/Sana/.idea/
external/Sana/*.png
external/Sana/tmp*
external/Sana/output*
external/Sana/output/
external/Sana/outputs/
external/Sana/wandb/
external/Sana/others/
external/Sana/.vscode/
external/Sana/private/
external/Sana/ldm_ae*
external/Sana/data/*
external/Sana/*.pth
external/Sana/.gradio/
external/Sana/*.bin
external/Sana/*.safetensors
external/Sana/*.pkl
external/Sana/*.pdf
external/Sana/vis*
external/Sana/stork/

# Byte-compiled / optimized / DLL files
external/Sana/__pycache__/
external/Sana/*.py[cod]
external/Sana/*$py.class

# C extensions
external/Sana/*.so

# Distribution / packaging
external/Sana/.Python
external/Sana/build/
external/Sana/develop-eggs/
external/Sana/dist/
external/Sana/downloads/
external/Sana/eggs/
external/Sana/.eggs/
external/Sana/lib/
external/Sana/lib64/
external/Sana/parts/
external/Sana/sdist/
external/Sana/var/
external/Sana/wheels/
external/Sana/share/python-wheels/
external/Sana/*.egg-info/
external/Sana/.installed.cfg
external/Sana/*.egg
external/Sana/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
external/Sana/*.manifest
external/Sana/*.spec

# Installer logs
external/Sana/pip-log.txt
external/Sana/pip-delete-this-directory.txt

# Unit test / coverage reports
external/Sana/htmlcov/
external/Sana/.tox/
external/Sana/.nox/
external/Sana/.coverage
external/Sana/.coverage.*
external/Sana/.cache
external/Sana/nosetests.xml
external/Sana/coverage.xml
external/Sana/*.cover
external/Sana/*.py,cover
external/Sana/.hypothesis/
external/Sana/.pytest_cache/
external/Sana/cover/

# Translations
external/Sana/*.mo
external/Sana/*.pot

# Django stuff:
external/Sana/*.log
external/Sana/local_settings.py
external/Sana/db.sqlite3
external/Sana/db.sqlite3-journal

# Flask stuff:
external/Sana/instance/
external/Sana/.webassets-cache

# Scrapy stuff:
external/Sana/.scrapy

# Sphinx documentation
external/Sana/docs/_build/

# PyBuilder
external/Sana/.pybuilder/
external/Sana/target/

# Jupyter Notebook
external/Sana/.ipynb_checkpoints

# IPython
external/Sana/profile_default/
external/Sana/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
external/Sana/.pdm.toml
external/Sana/.pdm-python
external/Sana/.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
external/Sana/__pypackages__/

# Celery stuff
external/Sana/celerybeat-schedule
external/Sana/celerybeat.pid

# SageMath parsed files
external/Sana/*.sage.py

# Environments
external/Sana/.env
external/Sana/.venv
external/Sana/env/
external/Sana/venv/
external/Sana/ENV/
external/Sana/env.bak/
external/Sana/venv.bak/

# Spyder project settings
external/Sana/.spyderproject
external/Sana/.spyproject

# Rope project settings
external/Sana/.ropeproject

# mkdocs documentation
external/Sana/site

# mypy
external/Sana/.mypy_cache/
external/Sana/.dmypy.json
external/Sana/dmypy.json

# Pyre type checker
external/Sana/.pyre/

# pytype static type analyzer
external/Sana/.pytype/

# Cython debug symbols
external/Sana/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

